---
  - name: Create required directories.
    become: yes
    shell:  |
      cd ~
      sudo mkdir -p uda_app/backend

  - name: "copy backend binaries"
    become: yes
    copy:
      src: dist.tar.gz
      dest: ~/uda_app/backend

  - name: "copy node_modules"
    become: yes
    copy:
      src: node_modules.tar.gz
      dest: ~/uda_app/backend
  
  - name: "Verify Copy"
    become: yes
    shell: |
      cd ~/uda_app/backend
      test dist.tar.gz && echo "dist Copied" || echo "dist not Copied"
      test node_modules.tar.gz && echo "node_modules Copied" || echo "node_modules not Copied"
    register: verifyCpy


  - name: "PRINT"
    debug: 
      msg: "{{ verifyCpy }}"


  - name: "Verify tar"
    become: yes
    shell: |
      cd ~/uda_app/backend
      tar -xzf dist.tar.gz
      tar -xzf node_modules.tar.gz
      rm dist.tar.gz
      rm node_modules.tar.gz
      test dist.tar.gz && echo "dist.tar.gz didnot rm" || echo "dist.tar.gz rmed"
      test node_modules.tar.gz && echo "node_modules.tar.gz didnot rm" || echo "node_modules.tar.gz rmed"
    register: verifyTar


  - name: "PRINTTAR"
    debug: 
      msg: "{{ verifyTar }}"


  - name: "Verify dependencies"
    become: yes
    shell: |
      npm --version
      sudo npm install pm2 -g
      n --version
      pm2 --version
    register: verifyDepend


  - name: "PRINTDEP"
    debug: 
      msg: "{{ verifyDepend }}"




  - name: "remove any running process"
    become: true
    command: pm2 delete all
    ignore_errors: true

  - name: "start server"
    become: true
    shell: |
      cd ~/uda_app/backend/dist
      pm2 start -f ./main.js --name "udaApp"
    environment:
      ENVIRONMENT: production
      TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
      TYPEORM_MIGRATIONS_DIR: "./migrations"
      TYPEORM_MIGRATIONS: "./migrations/*.js"
      TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"